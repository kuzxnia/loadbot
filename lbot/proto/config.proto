syntax = "proto3";

package proto;

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";

option go_package = "proto/";

service ConfigService {
  rpc SetConfig(ConfigRequest) returns (ConfigResponse) {}
  rpc GetConfig(google.protobuf.Empty) returns (ConfigResponse) {}
}

message SchemaRequest {
  string name = 1;
  string database = 2;
  string collection = 3;
  google.protobuf.Any schema = 4;
  repeated string save = 5;
}

message AgentRequest {
  string name = 1;
  string port = 2;
  string metrics_export_url = 3;
  uint64 metrics_export_interval_seconds = 4;
  string metrics_export_port = 5;
}

message JobRequest {
  string name = 1;
  string database = 2;
  string collection = 3;
  string type = 4;
  string schema = 5;
  uint64 connections = 6;
  uint64 pace = 7;
  uint64 data_size = 8;
  uint64 batch_size = 9;
  string duration = 10;
  uint64 operations = 11;
  string timeout = 12;
  google.protobuf.Any filter = 13;
}

message ConfigRequest {
  string connection_string = 1;
  AgentRequest agent = 2;
  repeated JobRequest jobs = 3;
  repeated SchemaRequest schemas = 4;
  bool debug = 5;
}

message ConfigResponse {
  string connection_string = 1;
  AgentRequest agent = 2;
  repeated JobRequest jobs = 3;
  repeated SchemaRequest schemas = 4;
  bool debug = 5;
}
